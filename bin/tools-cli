#!/usr/bin/env php
<?php

$mainDir = __DIR__ . '/../';

require_once $mainDir . 'vendor/autoload.php';

use Symfony\Component\Console\Application;
use ToolsCli\Console\Commands;
use ToolsCli\Console\Alias;
use Benchmark\Performance\Timer;
use Symfony\Component\Console\Output\ConsoleOutput;

Timer::start();
$composer = json_decode(
    file_get_contents($mainDir . 'composer.json')
);

$code = 1;
$output = new ConsoleOutput();

try {
    $alias = new Alias($argv);
    $command = new Commands($alias);
    $application = new Application;

    $application->setAutoExit(false);
    $application->setName($composer->description);
    $application->setVersion($composer->version);
    $application->addCommands($command->toArray());

    $alias->setCommand($application, $command);
    //$output->setDecorated(true);

    $code = $application->run();
} catch (\Exception $exception) {
    $output->writeln('<error>' . $exception->getMessage() . '</error>');
}

Timer::stop();

Timer::calculateStats();
try {
    $data = Timer::getFormattedOutput('raw+');
} catch (Twig_Error_Loader | Twig_Error_Runtime | Twig_Error_Syntax $exception) {
    
}

//@todo optionally dont display summary info
$output->writeln('');
$output->writeln(' Total time:   <info>' . $data['total_rune_time'] . '</info>');
$output->writeln(' Total memory: <info>' . $data['total_memory'] . '</info>');
$output->write(' Code: ');
dump($code);
$output->writeln('');
